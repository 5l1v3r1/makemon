#!/bin/bash

while [ "$(whoami)" != "root" ]; do
    echo "You must be root!"
    exit 1
done

grn=$'\x1b[32m'
red=$'\x1b[31m'
pur=$'\x1b[35m'
ylw=$'\x1b[33m'
rst=$'\x1b[0m'

echo -e "
${ylw}#${grn}~~~~~~~~~~~~~~~~${ylw}#${rst}
${pur}$(iw dev | grep -o 'Interface [^ ]*' | sed -e 's/Interface //g' | sort -n)${rst}
${ylw}#${grn}~~~~~~~~~~~~~~~~${ylw}#${rst}\n"

read -p "${grn}Enter a wireless interface to use:${rst} " iface
ifconfig $iface down; wait
clear

echo -e "
${grn}#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#     ${rst}
${ylw} 1${red}.${grn}) ${rst}${pur}Make 1 monitor interface      ${rst}
${ylw} 2${red}.${grn}) ${rst}${pur}Make multiple interfaces      ${rst}
${ylw} 3${red}.${grn}) ${rst}${pur}Delete monitor interfaces     ${rst}
${ylw} 4${red}.${grn}) ${rst}${red}Exit                          ${rst}
${grn}#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#     ${rst}\n"

read -p "${grn}Enter an option:${rst} " CHOICE

if [ "$CHOICE" == "4" ]; then
   clear && exit
fi

clear

###############################################
# Remove all mons before making multiple mons #
###############################################

remove_mon() {

m_count="$(echo -n $(iw dev | grep -o 'mon[0-9]' | wc -l))"

if [ "$m_count" -gt "0" ]; then

n_count=$(($m_count-1))

   for n in $(seq 1 $m_count); do

       iw dev mon$n del >/dev/null; wait

   done

fi
}


MASTER() {

#################
# Randomize Mac #
#################

RAND_MAC() {

gen() {
NUM="$(tr -dc '0-9a-f' </dev/urandom | head -c 2)"
echo -n $NUM:
}

for c in {1..6}; do

   if [ "$c" -lt "6" ]; then
      gen
   else
      gen | tr -d ':'
   fi

done
}

# Save Randomize mac to variable "nmac" #
nmac="$(RAND_MAC)"

##########################################
# Create a single new mon interface with #
# a randomized mac address               #
##########################################

if [ "$CHOICE" == "1" ]; then

iw dev $iface interface add mon1 type monitor; wait
add_mac() { macchanger mon1 -m $nmac 2>&1 | grep -o '\[ERROR\]'; wait; }

   if [ "$(add_mac)" == "[ERROR]" ]; then

      iw mon1 del && MASTER

   else

      ifconfig mon1 up; wait
      echo -e "\x1b[32mmon1 is up\x1b[0m"

   fi

#############################
# Delete all mon interfaces #
#############################
 
elif [ "$CHOICE" == "3" ]; then

# Check if any mons exist #    
m_count="$(echo -n $(iw dev | grep -o 'mon[0-9]' | wc -l))"

if [ "$m_count" == "0" ]; then

   echo -e "\x1b[91mNo mon interfaces to destroy!\x1b[0m"
   exit 1

else

n_count=$(($m_count-1))

   for n in $(seq 1 $m_count); do

       iw dev mon$n del >/dev/null; wait

   done

       ifconfig $iface up; wait
       echo -e "\x1b[91mAll mons are gone\x1b[0m"

fi

######################################
# Create more than "1" mon interface #
######################################

elif [ "$CHOICE" == "2" ]; then

remove_mon

     echo -e "${grn}Set up to 10 new virtual NICs${rst}"
     read -p "${grn}How many new VNICs do you want?:${rst} " VNICS

     if [ "$VNICS" -gt "10" ]; then
     
        echo -e "${red}Cannot set more than 10 VNICS!${rst}"
        exit 1

     elif [ "$VNICS" -lt "2" ]; then

        echo -e "${red}If not more than 1 VNIC use option 1!${rst}"
        exit 1

     fi

     clear

     for i in $(seq 1 $VNICS); do

     create_iface() {

        nmacs="$(RAND_MAC)"
        iw dev $iface interface add mon$i type monitor; wait
        add_mac() { macchanger mon$i -m $nmacs 2>&1 | grep -o '\[ERROR\]'; wait; }

            while [ "$(add_mac)" == "[ERROR]" ]; do

                  iw mon$i del && wait && create_iface

            if [ "$(add_mac)" != "[ERROR]" ]; then
                  break
            fi; done; }

        create_iface && wait
        ifconfig mon$i up && wait
        echo -e "${grn}mon$i is up!${rst}"

     done

fi
}

MASTER
